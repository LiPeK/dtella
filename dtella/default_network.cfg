###############################################################################
# Dtella network configuration file. These settings should be customized for
# each new network you create.
#
# NOTE: this file follows RFC 822 http://tools.ietf.org/html/rfc822.html which
# means that multiline values must have a whitespace character at the
# beginning of each line.
###############################################################################

###############################################################################
# This section contains static "hub" configuration, such as network encryption
# key and the IP addresses allowed to connect to it. This defines the unique
# identity of your network.
[network]

# This is an arbitrary string which is used for encrypting packets.
# It essentially defines the uniqueness of a Dtella network, so every
# network should have its own unique key.
network_key = DC-Comics-Reloaded

# This is the name of the "hub" which is seen by the user's DC client.
# "Dtella@____" is the de-facto standard, but nobody's stopping you
# from picking something else.
hub_name = ADtella@Cambridge

# Nodes can either emulate an ADC or NMDC hub. ADC is recommended.
# Clients will connect using adc:// or nmdc:// (default in most clients)
adc_mode = True

# Set this if you want Dtella to reject plaintext connection attempts.
# This only works when adc_mode is True. Recommended for fascist networks.
adc_fcrypto = True

# This enforces a maximum cap for the 'minshare' value which appears in DNS.
# It should be set to some sane value to prevent the person managing DNS from
# setting the minshare to 99999TiB, and effectively disabling the network.
minshare_cap = 100MiB

# This is a list of subnets (in CIDR notation) which will be permitted on
# the network.  Make sure you get this right initially, because you can't
# make changes once the program has been distributed.  In the unlikely event
# that you don't want any filtering, use ['0.0.0.0/0']
allowed_subnets = ['128.232.0.0/16', '129.169.0.0/16', '131.111.0.0/16', '193.60.80.0/20',
	'172.16.0.0/13', '172.24.0.0/14', '172.28.0.0/15', '172.30.0.0/16']


###############################################################################
# Here we configure an object which pulls 'Dynamic Config' from some source
# at a known fixed location on the Internet.  This config contains a small
# encrypted IP cache, version information, minimum share, and a hash of the
# IRC bridge's public key.
[config]

# -- Use DNS TXT Record --
dconfig_type = dns
dconfig_options =
	{
	# Hostname where the DNS TXT record resides.
	'hostname': 'cambridge.config.dtella.org',
	# Some public DNS servers to query through. (GTE and OpenDNS)
	'servers': ['4.2.2.1', '4.2.2.2', '208.67.220.220', '208.67.222.222']
	}

# -- Use Google Spreadsheet --
##dconfig_type = gdata
##dconfig_options =
##	{
##	sheet_key = "..."
##	}


###############################################################################
# Here we configure a mapping from a user's hostname or IP to their location.
# Locations are displayed in the "Connection / Speed" column of the DC client
# in NMDC mode, or in a prefix tag in the "Description" column in ADC mode.
[locations]

# If this is false, then locations will not be displayed. If this is False,
# then you may delete the rest of the lines in this file.
use_locations = True

# DNS servers which will be used for doing IP->Hostname reverse lookups.
# These should be set to your school's local DNS servers, for efficiency.
rdns_servers = ['131.111.8.42', '131.111.12.20']

# A list of regexes used to match the hostname to. For each regex in the list,
# if the hostname matches it, the first matching group will be used as the key
# into the results table for that regex. The value will be returned as the
# location.
host_regex =
	[
	(r"(?:.*?\.)?([^.]+)(?:\.societies|\.private)?\.cam\.ac\.uk", {
	'chu': "Churchill", 'christs': "Christ's", 'clare': "Clare", 'corpus': "Corpus Christi",
	'dar': "Darwin", 'dow': "Downing", 'emma': "Emmanuel", 'fitz': "Fitzwilliam",
	'girton': "Girton", 'cai': "Gonville and Caius", 'homerton': "Homerton", 'jesus': "Jesus",
	'kings': "King's", 'lucy-cav': "Lucy Cavendish", 'magd': "Magdalene", 'newn': "Newnham",
	'pem': "Pembroke", 'quns': "Queens'", 'robinson': "Robinson", 'sel': "Selwyn",
	'sid': "Sidney Sussex", 'caths': "St Catharine's", 'st-edmunds': "St Edmund's",
	'joh': "St John's", 'trin': "Trinity", 'wolfson': "Wolfson", 'clarehall': "Clare Hall",
	'hughes': "Hughes Hall", 'newhall': "New Hall", 'trinhall': "Trinity Hall", 'srcf': "SRCF",
	}),
	]
