###############################################################################
# Dtella bridge configuration file. These settings should be customized for
# each new bridge you create, and should be kept as **secret as possible**.
#
# NOTE: this file follows RFC 822 http://tools.ietf.org/html/rfc822.html which
# means that multiline values must have a whitespace character at the
# beginning of each line.
###############################################################################

###############################################################################
# This section contains the configuration for running Dtella in bridge mode,
# such as which IPs to use as seeds and the private key for signing messages.
[bridge]

# The network config for this bridge. If this is omitted, the one with the same
# name as the bridge will be used. To use the default network, set this to None
# network = None

# UDP Port used by this Dtella node.
udp_port = 0

# Optionally provide an initial hint for my own IP.  If this is an offsite
# IP, it will be exempted from IP filtering for bridge/cache purposes.
myip_hint = ''

# IP:Ports to seed our local cache with. (can be [])
ip_cache = ['0.0.0.0:0']

# Private key, generated by "./dtella.py --makeprivatekey". This is a tuple of
# long integers, and is used to authenticate messages from the bridge.
private_key = ()


###############################################################################
# Here we give Dtella the necessary information for it to connect to the IRC
# server hosting the bridge, as well as IRC-related settings for the bridge
# itself.
[ircd]

# Service config. Supported servers are "InspIRCd" and "UnrealIRCd"
service_ircd = InspIRCd

# Parametrs that IRCd is running as
service_args = {
	'host' : "remote.example.com",
	'port' : 6667,
	'ssl' : False,
	'sendpass': "hunter2",
	'recvpass': "hunder2",
	'network_name': "Awesome Network Name",
	'my_host': "myhost.example.com",
	'my_name': "Dtella IRC Bridge",
	'channel': "#dtella",
	'sid': None,
	'hostmask_prefix': "pre",
	'hostmask_keys': ["key1", "key2", "key3"]
	}

# DNS servers which will be used for doing IP->Hostname reverse lookups.
# These should be set to your school's local DNS servers, for efficiency.
# If you've already set rdns_servers in local_config.py, then you can leave
# this one blank, because the two lists will be merged together.
rdns_servers = []

# Bot Parameters
irc_to_dc_bot = "*IRC"
dc_to_irc_bot = "DtellaBridge"

# Make these IRC nicks appear in the Dtella chat (list of strings)
virtual_nicks = []

# Nick Prefixes
dc_to_irc_prefix = '|'	# Prefix given to DC users, as seen from IRC.
irc_to_dc_prefix = '~'	# Prefix given to IRC users, as seen from DC.

# Maximum IRC nick length.  This should equal Unreal's configured length.
max_irc_nick_len = 30


###############################################################################
# Dynamic config updater stuff. You will need to choose one of the different
# updating methods by defining push_type and push_options. All the supported
# types are listed below, with examples on their configuration.
#
# We currently recommend the Google Spreadsheets method as it is the most
# resiliant and least prone to failure.
[push_config]

# Constant entries for the configuration
dconfig_fixed_entries = {
	# Minimum share size needed to transfer files.
	# A number of bytes, optionally followed by K, M, G, T
	'minshare': '256M',

	# Version info.
	# "<required version> <latest version> <URL>"
	'version': '13.37 13.38 http://www.example.com/',
	}

# How often to push a dynamic config update, in seconds.
# (Note: The first update is always pushed after 30 seconds.)
dconfig_push_interval = 3600

# -- Write to a plain text file, for testing. --
dconfig_push_type = textfile
dconfig_push_options = {
	'fname': "test-dns.txt",
	}

# -- Use Google Spreadsheets --
# To use this method, sign into a Gmail or Apps account, create an empty
# spreadsheet, and publish it.  The sheet key is the random string of
# characters from the page URL.  (Be careful to never delete the sheet!)
##dconfig_push_type = gdata
##dconfig_push_options = {
##	'email': "foo@gmail.com",
##	'password': "...",
##	'sheet_key': "pJPozIo...",
##	}

# -- Use DNS TXT Record --
##dconfig_push_type = dns
##dconfig_push_options = {
##	'tsig_key': {'keyname': 'keyvalue'},
##	'zone': "foo.config.dtella.org",
##	'record': "",
##	'ttl': 300,
##	'dns_ip': '1.2.3.4',
##	}

# -- Use yi.org --
##dconfig_push_type = yi
##dconfig_push_options = {
##	'username': "username",
##	'password': "password",
##	'host_id': 12345,
##	}
