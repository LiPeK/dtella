# allowed comments
# allowed empty lines
# this file must be UTF-8 encoded
# usage:
# [[r]'nick@IP_regex' : ][r]'text_regex' => [r]'replacement_string'
# or
# [[r]'nick@IP_regex' : ][r]'text_regex' => l'body of labmda function "lambda m : ", where m is match object'
# lambda function should return replaced string
# 
# all lines which have incorrect syntax will be ignored on client's side during decoding
#
# Empty string '' or l'None' can be used to block the line completely

r'(?i)(f)(uck)'			=>	l'm.group(1)+"".join(random.sample("@#$%^&*", len(m.group(2))))'

# strip
r'^\s*(\S+)\s*$'		=>	'\\1'

# AAAAAAaaaaaa => AAAAaaaa
r'(?i)((\w|ę|ó|ą|ś|ł|ż|ź|ć|ń|Ę|Ó|Ą|Ś|Ł|Ż|Ź|Ć|Ń)\2{3})\2+'		=>	'\\1'

# spaces reduction
r'\ +'						=>	' '

# many '.' reduction
r'\.{4,}'						=>	'...'

# ........,,,,,,,, => ......,,,,,,
r'(([^\węóąśłżźćńĘÓĄŚŁŻŹĆŃ])\2{5})\2+'			=>	'\\1'

# reduction of: blablabla, ha ha ha ha ha, etc.
r'(.{2,4})(.?\1){3,}'	=>	'\\1\\2'

# Title Case reduction
#r'(?<=\b[A-ZĘÓĄŚŁŻŹĆŃ])[\wĘÓĄŚŁŻŹĆŃęóąśłżźćń]*(?:\s+[A-ZĘÓĄŚŁŻŹĆŃ][\wĘÓĄŚŁŻŹĆŃęóąśłżźćń]*)+' => l'm.group(0).lower()'
r'(?:(?<=\b[A-Z])|(?<=\b(?:Ę|Ó|Ą|Ś|Ł|Ż|Ź|Ć|Ń)))(?:\w|Ę|Ó|Ą|Ś|Ł|Ż|Ź|Ć|Ń|ę|ó|ą|ś|ł|ż|ź|ć|ń)*(?:\s+(?:[A-Z]|Ę|Ó|Ą|Ś|Ł|Ż|Ź|Ć|Ń)(?:\w|Ę|Ó|Ą|Ś|Ł|Ż|Ź|Ć|Ń|ę|ó|ą|ś|ł|ż|ź|ć|ń)*)+' => l'm.group(0).lower()'

# mute the user with specific nick
r'(?i).*ass.*'	:	r'.*' 		=>	l'None'

# mute the user with specific IP
r'.*192.168.10.10'	:	r'.*' 		=>	l'None'

# fun
#r'(?i).*nick.*'			:	r'[yz]'			=>	l'random.choice("yz")'

# shuffle
#r'(?i).*nick2.*'	:	r'([\węóąśłżźćńĘÓĄŚŁŻŹĆŃ])([\węóąśłżźćń]+)([\węóąśłżźćń])'	=>	l'm.group(1)+"".join(random.sample(m.group(2),len(m.group(2))))+m.group(3)'
